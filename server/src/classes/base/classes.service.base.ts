/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Classes as PrismaClasses } from "@prisma/client";

export class ClassesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ClassesCountArgs, "select">): Promise<number> {
    return this.prisma.classes.count(args);
  }

  async classesItems(
    args: Prisma.ClassesFindManyArgs
  ): Promise<PrismaClasses[]> {
    return this.prisma.classes.findMany(args);
  }
  async classes(
    args: Prisma.ClassesFindUniqueArgs
  ): Promise<PrismaClasses | null> {
    return this.prisma.classes.findUnique(args);
  }
  async createClasses(args: Prisma.ClassesCreateArgs): Promise<PrismaClasses> {
    return this.prisma.classes.create(args);
  }
  async updateClasses(args: Prisma.ClassesUpdateArgs): Promise<PrismaClasses> {
    return this.prisma.classes.update(args);
  }
  async deleteClasses(args: Prisma.ClassesDeleteArgs): Promise<PrismaClasses> {
    return this.prisma.classes.delete(args);
  }
}
